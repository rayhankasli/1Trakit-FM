<?xml version="1.0" encoding="UTF-8"?>
<!-- Indicates the begning of the component -->
<!--
name   : The name of the component class suffixed with Component. Its container will be named as CustomerContainerComponent. Its presentation class will be named as
CustomerPresentationComponent and its selector will be <app-Customer-ui> and its presenter service will be named as CustomerPresenter.
module : The module to which the component belongs to. If the module does not exist, the generator should create a module and its associated routing file
, register the component in the declarations array and add its route in the routing file of the module. In case a new module is created, the
generator should add the module in the lazy loaded routes of app.routing.module.
breadcrumbKey : The breadcrums label whose value will be fetched from the JSON file by using ngx-translate.
-->
<component name="PrintDetails" module="copyit" xmlns:xi="http://www.w3.org/2001/XInclude">
	<!-- Referencing the shared model that will be used by .net as well as Angular Generator -->
	<!-- Referencing the shared controller that will be used by .net and Angular generator -->
	<xi:include href="./generator-config/CopyItModule/shared/controllers/printdetails-controller.xml" />
	<xi:include href="./generator-config/CopyItModule/shared/models/printdetails-model.xml" />
	<!-- <xi:include href="./generator-config/swagger_d.yaml" /> -->
	<!-- Indicates that the form needs to be generated by using SuperManager as the Model class from the shared model -->
	<form requestModel="PrintDetailsRequest" responseModel="PrintDetailsResponse" controller="PrintDetails">
		<!-- This will pick up each control from the <form> and place it in 2 column format -->
		<layout col="3">
			<!-- Row- 1 -->
			<input type="multiselect" bind="reproductionType">
			</input>
			<input type="dropdown" bind="tabs">
			</input>
			<input type="multiselect" bind="finishing">
			</input>
			<!-- Row- 2 -->
			<input type="multiselect" bind="envelopeQuantity">
			</input>
			<input type="dropdown" bind="overSizedCopy">
			</input>
		</layout>
		<layout col="4">
			<!-- Row- 1 -->
			<input type="multiselect" bind="coverPageType">
			</input>
			<input type="multiselect" bind="coverPageSize">
			</input>
			<input type="multiselect" bind="coverPageColor">
			</input>
			<input type="multiselect" bind="coverPageWeight">
			</input>
		</layout>
		<layout col="3">
			<input type="multiselect" bind="middlePageSize">
			</input>
			<input type="multiselect" bind="middledPageColor">
			</input>
			<input type="multiselect" bind="middledPageWeight">
			</input>
		</layout>
	</form>
	<!-- We will leverage controller.xml file inorder to generate service file -->
</component>
